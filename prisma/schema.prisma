generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String      @id @default(cuid())
  name                String?
  email               String      @unique
  emailVerified       DateTime?
  image               String?
  lastLogin           DateTime    @default(now())
  onboardingCompleted Boolean     @default(false)
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
  accounts            Account[]
  sessions            Session[]
  Analytics           Analytics[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  user              User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  analytics         Analytics[]

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Product {
  id              String   @id @default(cuid())
  name            String
  price           Float
  currency        String
  countryOfOrigin String
  amazonLink      String
  walmartLink     String
  category        String
  cons            String[]
  organic         Boolean  @default(false)
  pros            String[]
  rating          Float    @default(0.0)

  @@map("products")
}

model Analytics {
  id                       String   @id @default(cuid())
  month                    Int
  year                     Int
  totalExpense             Float
  canadianContribution     Float
  createdAt                DateTime @default(now())
  updatedAt                DateTime @default(now())
  userId                   String
  accountProvider          String?
  accountProviderAccountId String?
  Account                  Account? @relation(fields: [accountProvider, accountProviderAccountId], references: [provider, providerAccountId])
  user                     User     @relation(fields: [userId], references: [id])

  @@unique([userId, month, year])
  @@map("analytics")
}
